{
	// Place your competitive-programming-archive workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"CP-Main-Function-Snippet": {
		"prefix": "cp-main",
		"body": [
			"#include <iostream>",
			"",
			"int main()",
			"{",
			"\tstd::ios::sync_with_stdio(false);",
			"\tstd::cin.tie(nullptr);",
			"#ifdef LOCAL",
			"\tfreopen(\"input.txt\", \"r\", stdin);",
			"\tfreopen(\"output.txt\", \"w\", stdout);",
			"\tfreopen(\"error.txt\", \"w\", stderr);",
			"#endif",
			"",
			"\t// ---- CODE ----\n",
			"\t$0",
			"\n\t// ---- ----",
			"\treturn 0;",
			"}",
		],
		"description": "Snippet for main function for competitive programming solutions."
	}
}